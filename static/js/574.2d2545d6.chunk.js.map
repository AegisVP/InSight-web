{"version":3,"file":"static/js/574.2d2545d6.chunk.js","mappings":"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","sources":["components/InputFormValid/InputEmail.js","components/InputFormValid/InputForm.styled.js","components/InputFormValid/InputPassword.js","components/RegisterForm/RegisterForm.styled.jsx","components/InputFormValid/InputName.js","components/RegisterForm/RegisterForm.jsx","pages/RegistrationPage.js"],"sourcesContent":["import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputMail = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"email\"\n    type=\"email\"\n    name=\"email\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import styled from 'styled-components';\nimport { theme } from 'components/Common/Theme';\n\nexport const InputForm = styled.input`\n  width: 285px;\n  height: 36px;\n  border-bottom: ${theme.border.form};\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.text.defaultText};\n  border: none;\n  border-bottom: 1px solid #E0E0E0;\n   background-color: transparent;\n\n   @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n`;","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputPassword = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"current-password\"\n    type=\"password\"\n    name=\"password\"\n    required\n    onChange={onChange}\n    value={value}\n    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n    title=\"Має містити принаймні одну цифру, одну велику та малу літеру та принаймні 6 або більше символів\"\n  />\n);","import styled from 'styled-components';\nimport { theme } from 'components/Common/Theme';\n\nexport const Registration = styled.div`\n  padding-top: 40px;\n  width: 280px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 160px;\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const FormRegistration = styled.form`\n  border: none;\n  margin-top: 55px;\n`;\n\nexport const StyledTitleForm = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-family: 'Verdana';\n  font-style: normal;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  font-size: ${theme.fontSizes.default};\n  font-weight: ${theme.fontWeights.bold};\n  color: ${theme.colors.text.accentText};\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledInputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow: hidden;\n`;\n\nexport const StyledLabelInput = styled.label`\n  padding-bottom: 20px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${theme.fontWeights.bold};\n  color: ${theme.colors.text.mediumText};\n`;\n\nexport const ButtonRegContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 60px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const ButtonReg = styled.div`\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonLog = styled.div`\n  @media screen and (min-width: 768px) {\n    margin-left: 20px;\n  }\n`;\n\nexport const AccentButton = styled.button`\n  height: 44px;\n  width: 182px;\n  color: ${p => p.theme.button.accentButton.text};\n  border: ${p => p.theme.button.accentButton.border};\n  background-color: ${p => p.theme.button.accentButton.background};\n  box-shadow: ${p => p.theme.button.shadow.default};\n  border-radius: 30px;\n`;\n\nexport const DefaultButton = styled.button`\n  height: 44px;\n  width: 182px;\n  color: ${p => p.theme.button.defaultButton.text};\n  border: ${p => p.theme.button.defaultButton.border};\n  background-color: ${p => p.theme.button.defaultButton.background};\n  box-shadow: none;\n  border-radius: 30px;\n`;\n","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputName = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"name\"\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Назва може містити лише літери, апостроф, тире та пробіли\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from 'redux/user/userOperations';\nimport { selectIsLoadingUser } from 'redux/user/userSelectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\nimport {\n  Registration,\n  FormRegistration,\n  StyledInputGroup,\n  StyledTitleForm,\n  StyledLabelInput,\n  ButtonRegContainer,\n  ButtonReg,\n  AccentButton,\n  ButtonLog,\n  DefaultButton,\n} from './RegisterForm.styled';\n\nimport { InputName } from 'components/InputFormValid/InputName';\nimport { InputMail } from 'components/InputFormValid/InputEmail';\nimport { InputPassword } from 'components/InputFormValid/InputPassword';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const initialUser = { name: '', email: '', password: '' };\n  const [user, setUser] = useState(initialUser);\n  const isLoading = useSelector(selectIsLoadingUser);\n\n  const handleChange = e => {\n    const newUserData = { ...user };\n    newUserData[e.currentTarget.name] = e.currentTarget.value;\n    setUser(newUserData);\n  };\n\n  const resetForm = () => {\n    setUser(initialUser);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registerUser({ name, email, password }));\n    resetForm();\n  };\n\n  const { name, email, password } = user;\n\n  return (\n    <Registration>\n      <StyledTitleForm>Register</StyledTitleForm>\n\n      <FormRegistration onSubmit={handleSubmit}>\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Name *\n            <InputName value={name} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            E-mail *\n            <InputMail value={email} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Password *\n            <InputPassword value={password} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <ButtonRegContainer>\n          <ButtonReg>\n            <AccentButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? <Loader ariaLabel=\"loader-spinner\" visible={true} /> : 'Register'}\n            </AccentButton>\n          </ButtonReg>\n\n          <ButtonLog>\n            <Link to={'/login'}>\n              <DefaultButton type=\"button\">Login</DefaultButton>\n            </Link>\n          </ButtonLog>\n        </ButtonRegContainer>\n      </FormRegistration>\n    </Registration>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks/useAuth';\nimport { Navigate, useSearchParams } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isLoggedIn } = useAuth();\n  const [searchParams] = useSearchParams();\n  const retPath = searchParams.get('retPath') || '/';\n\n  return isLoggedIn ? <Navigate to={`/${retPath}`} /> : <RegisterForm />;\n};\n\nexport default LoginPage;\n"],"names":["InputMail","onChange","value","autoComplete","type","name","required","InputForm","styled","theme","InputPassword","pattern","title","Registration","FormRegistration","StyledTitleForm","StyledInputGroup","StyledLabelInput","ButtonRegContainer","ButtonReg","ButtonLog","AccentButton","p","button","accentButton","text","border","background","shadow","default","DefaultButton","defaultButton","InputName","RegisterForm","dispatch","useDispatch","initialUser","email","password","useState","user","setUser","isLoading","useSelector","selectIsLoadingUser","handleChange","e","newUserData","currentTarget","onSubmit","preventDefault","registerUser","disabled","Loader","ariaLabel","visible","to","isLoggedIn","useAuth","useSearchParams","retPath","get"],"sourceRoot":""}