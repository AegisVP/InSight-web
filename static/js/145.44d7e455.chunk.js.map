{"version":3,"file":"static/js/145.44d7e455.chunk.js","mappings":"qKAyBA,UApBmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,IAAIC,IAAIC,OAAOC,SAASC,MAAMC,aAEhD,GAAIL,EAAUM,IAAI,SAAWN,EAAUM,IAAI,UAAYN,EAAUM,IAAI,SAAU,CAC7E,IAAMC,EAAO,CACXC,KAAMR,EAAUS,IAAI,QACpBC,MAAOV,EAAUS,IAAI,SACrBE,MAAOX,EAAUS,IAAI,SACrBG,UAAU,GAGZd,GAASe,EAAAA,EAAAA,IAAYN,IACrBO,EAAAA,EAAAA,IAAeP,EAAKI,MACrB,CAED,OAAO,SAAC,KAAD,CAAUI,GAAG,IAAIC,SAAO,GAChC,C","sources":["pages/GoogleAuth.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { googleLogin } from 'redux/user/userSlice';\nimport { authHeader } from 'redux/utils/authHeader';\n\nconst GoogleAuth = () => {\n  const dispatch = useDispatch();\n\n  const urlParams = new URL(window.location.href).searchParams;\n\n  if (urlParams.has('name') && urlParams.has('email') && urlParams.has('token')) {\n    const user = {\n      name: urlParams.get('name'),\n      email: urlParams.get('email'),\n      token: urlParams.get('token'),\n      isOAuth2: true,\n    };\n\n    dispatch(googleLogin(user));\n    authHeader.set(user.token);\n  }\n\n  return <Navigate to=\"/\" replace />;\n};\n\nexport default GoogleAuth;\n"],"names":["dispatch","useDispatch","urlParams","URL","window","location","href","searchParams","has","user","name","get","email","token","isOAuth2","googleLogin","authHeader","to","replace"],"sourceRoot":""}