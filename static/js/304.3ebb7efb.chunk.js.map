{"version":3,"file":"static/js/304.3ebb7efb.chunk.js","mappings":"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","sources":["components/AuthForms/InputFormValid/InputEmail.jsx","components/AuthForms/InputFormValid/InputForm.styled.js","components/AuthForms/InputFormValid/InputPassword.jsx","components/Common/FormComponents.js","components/Common/GoogleButton.js","components/Loader/LoaderSmall.jsx","components/AuthForms/RegisterForm/RegisterForm.styled.js","components/AuthForms/InputFormValid/InputName.jsx","components/AuthForms/RegisterForm/RegisterForm.jsx","pages/RegistrationPage.js"],"sourcesContent":["import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputMail = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"email\"\n    type=\"email\"\n    name=\"email\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import styled from 'styled-components';\n\nexport const InputForm = styled.input`\n  width: 285px;\n  height: 36px;\n  border-bottom: ${p => p.theme.border.form};\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${p => p.theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.text.defaultText};\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n`;\n","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputPassword = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"current-password\"\n    type=\"password\"\n    name=\"password\"\n    required\n    onChange={onChange}\n    value={value}\n    // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n    title=\"Має містити принаймні одну цифру, одну велику та малу літеру та принаймні 6 або більше символів\"\n  />\n);","import styled from 'styled-components';\n\nconst BasicButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: ${p => p.theme.mp(1)};\n  padding: ${p => p.theme.mp(1, 3)};\n\n  font-size: ${p => p.theme.fontSizes.default};\n  height: 44px;\n  width: 182px;\n\n  outline: none;\n  border-radius: ${p => p.theme.radii.xlarge};\n\n  transition: box-shadow ${p => p.theme.animation.fast};\n\n  &:hover,\n  &:focus {\n    box-shadow: ${p => p.theme.button.shadow.hover};\n  }\n\n  &:active {\n    box-shadow: ${p => p.theme.button.shadow.active};\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  margin: ${p => p.theme.mp(2, 4)};\n  padding: ${p => p.theme.mp(2, 4)};\n\n  border: none;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: ${p => p.theme.mp(2, 0, 1)};\n\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const StyledInput = styled.input`\n  margin: ${p => p.theme.mp(0, 0, 0, 3)};\n  padding: ${p => p.theme.mp(1, 2)};\n\n  font-size: ${p => p.theme.fontSizes.default};\n  font-weight: ${p => p.theme.fontWeights.normal};\n\n  border: none;\n  border-bottom: 1px solid #000000;\n`;\n\nexport const StyledAccentButton = styled(BasicButton)`\n  color: ${p => p.theme.button.accentButton.text};\n  border: ${p => p.theme.button.accentButton.border};\n  background-color: ${p => p.theme.button.accentButton.background};\n  box-shadow: ${p => p.theme.button.shadow.default};\n`;\n\nexport const StyledDefaultButton = styled(BasicButton)`\n  color: ${p => p.theme.button.defaultButton.text};\n  border: ${p => p.theme.button.defaultButton.border};\n  background-color: ${p => p.theme.button.defaultButton.background};\n  box-shadow: none;\n`;\n","import { StyledDefaultButton } from 'components/Common/FormComponents';\nimport styled from 'styled-components';\nimport googleIcon from '../../images/google.png';\n\nexport const GoogleLoginButton = styled(StyledDefaultButton)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n\n    position: absolute;\n    top: center;\n    left: 20px;\n    width: 35px;\n    height: 35px;\n\n    background: url(${googleIcon});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  }\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { theme } from 'components/Common/Theme';\n\nexport const LoaderSmall = ({ size = 30, visible = true, color = theme.colors.text.accentText }) => {\n  return (\n    <ThreeDots\n      height={size}\n      width={size}\n      radius=\"15\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      visible={visible}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Registration = styled.div`\n  padding-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 280px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 160px;\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const FormRegistration = styled.form`\n  border: none;\n  margin-top: 55px;\n`;\n\nexport const StyledTitleForm = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-family: 'Verdana';\n  font-style: normal;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizes.default};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.text.accentText};\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledInputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow: hidden;\n`;\n\nexport const StyledLabelInput = styled.label`\n  padding-bottom: 20px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${p => p.theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.text.mediumText};\n`;\n\nexport const ButtonRegContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 60px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const ButtonReg = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonLog = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-left: 20px;\n  }\n`;\n\nexport const StyledError = styled.div`\n  color: #e11616;\n`;\n","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputName = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"name\"\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Назва може містити лише літери, апостроф, тире та пробіли\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { constants } from 'constants';\nimport { registerUser } from 'redux/user/userOperations';\nimport { selectIsLoadingUser, selectErrorUser } from 'redux/user/userSelectors';\nimport { Link } from 'react-router-dom';\nimport {\n  Registration,\n  FormRegistration,\n  StyledInputGroup,\n  StyledTitleForm,\n  StyledLabelInput,\n  ButtonRegContainer,\n  ButtonReg,\n  ButtonLog,\n  StyledError,\n} from './RegisterForm.styled';\n\nimport { InputName } from 'components/AuthForms/InputFormValid/InputName';\nimport { InputMail } from 'components/AuthForms/InputFormValid/InputEmail';\nimport { InputPassword } from 'components/AuthForms/InputFormValid/InputPassword';\nimport { LoaderSmall } from 'components/Loader/LoaderSmall';\nimport { StyledAccentButton, StyledDefaultButton } from 'components/Common/FormComponents';\nimport { useEffect } from 'react';\nimport { GoogleLoginButton } from 'components/Common/GoogleButton';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const initialUser = { name: '', email: '', password: '' };\n  const [user, setUser] = useState(initialUser);\n  const [isError, setIsError] = useState(false);\n  const isLoading = useSelector(selectIsLoadingUser);\n  const userError = useSelector(selectErrorUser);\n  const googleUrl = `${constants.apiServerAddress}/user/google`;\n\n  const handleChange = e => {\n    if (isError) setIsError(false);\n    const newUserData = { ...user };\n    newUserData[e.currentTarget.name] = e.currentTarget.value;\n    setUser(newUserData);\n  };\n\n  const resetForm = () => {\n    setUser({ ...user, password: '' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsError(false);\n    dispatch(registerUser({ name: user.name, email: user.email, password: user.password }));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (!isLoading && userError) setIsError(true);\n  }, [isLoading, user, userError]);\n\n  return (\n    <Registration>\n      <StyledTitleForm>Register</StyledTitleForm>\n\n      <FormRegistration onSubmit={handleSubmit}>\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Name *\n            <InputName value={user.name} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            E-mail *\n            <InputMail value={user.email} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Password *\n            <InputPassword value={user.password} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        {isError ? <StyledError>{userError}</StyledError> : null}\n\n        <ButtonRegContainer>\n          <ButtonReg>\n            <StyledAccentButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? <LoaderSmall /> : 'Register'}\n            </StyledAccentButton>\n          </ButtonReg>\n\n          <ButtonLog>\n            <Link to={'/login'}>\n              <StyledDefaultButton type=\"button\">Login</StyledDefaultButton>\n            </Link>\n          </ButtonLog>\n        </ButtonRegContainer>\n\n        <ButtonReg style={{ margin: 0, marginTop: 20 }}>\n          <a href={googleUrl}>\n            <GoogleLoginButton type=\"button\">Google</GoogleLoginButton>\n          </a>\n        </ButtonReg>\n      </FormRegistration>\n    </Registration>\n  );\n};\n","import { RegisterForm } from 'components/AuthForms/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks/useAuth';\nimport { Navigate, useSearchParams } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isLoggedIn } = useAuth();\n  const [searchParams] = useSearchParams();\n  const retPath = searchParams.get('retPath') || '/';\n\n  return isLoggedIn ? <Navigate to={`/${retPath}`} /> : <RegisterForm />;\n};\n\nexport default LoginPage;\n"],"names":["InputMail","onChange","value","autoComplete","type","name","required","InputForm","styled","p","theme","border","form","fontSizes","default","fontWeights","normal","colors","text","defaultText","InputPassword","title","BasicButton","mp","radii","xlarge","animation","fast","button","shadow","hover","active","StyledAccentButton","l","bold","accentButton","background","StyledDefaultButton","defaultButton","GoogleLoginButton","googleIcon","LoaderSmall","size","visible","color","height","width","radius","ariaLabel","Registration","FormRegistration","StyledTitleForm","accentText","StyledInputGroup","StyledLabelInput","mediumText","ButtonRegContainer","ButtonReg","ButtonLog","StyledError","InputName","pattern","RegisterForm","dispatch","useDispatch","useState","email","password","user","setUser","isError","setIsError","isLoading","useSelector","selectIsLoadingUser","userError","selectErrorUser","googleUrl","constants","handleChange","e","newUserData","currentTarget","useEffect","onSubmit","preventDefault","registerUser","disabled","to","style","margin","marginTop","href","isLoggedIn","useAuth","useSearchParams","retPath","get"],"sourceRoot":""}