{"version":3,"file":"static/js/984.44d22f96.chunk.js","mappings":"wOAGaA,EAAqBC,EAAAA,GAAAA,IAAH,wLAKbC,EAAAA,EAAAA,OAAAA,WAAAA,gBACE,SAAAC,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IACA,SAAAD,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IAGTC,EAAOJ,EAAAA,GAAAA,OAAH,4HACC,SAAAE,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,GAIFF,EAAAA,EAAAA,OAAAA,QAEJI,EAAOL,EAAAA,GAAAA,OAAH,wGACE,SAAAE,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,I,SClBPG,EAAY,WACvB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KACR,OACE,+BACE,UAACR,EAAD,YACE,UAACM,EAAD,CAAMI,KAAK,SAAX,mBAA2BF,MAC3B,SAACH,EAAD,WACE,cAAGM,KAAK,WAAR,wBAKT,E,UCXYC,EAAkBX,EAAAA,GAAAA,IAAH,kQACTC,EAAAA,EAAAA,OAAAA,OACCA,EAAAA,EAAAA,QAAAA,GACHA,EAAAA,EAAAA,QAAAA,IAUJW,GAAaZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,sSACXC,EAAAA,EAAAA,GAAS,EAAG,EAAG,EAAG,GACnBA,EAAAA,EAAAA,OAAAA,KAAAA,YAOQA,EAAAA,EAAAA,QAAAA,GACCA,EAAAA,EAAAA,QAAAA,GACDA,EAAAA,EAAAA,OAAAA,QAINa,GAAmBd,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,iLACjBC,EAAAA,EAAAA,GAAS,EAAG,EAAG,EAAG,GACnBA,EAAAA,EAAAA,OAAAA,KAAAA,WAEOA,EAAAA,EAAAA,QAAAA,GAEEA,EAAAA,EAAAA,QAAAA,IChCPc,GDmCgBf,EAAAA,GAAAA,OAAH,4GAIdC,EAAAA,EAAAA,GAAS,EAAG,EAAG,EAAG,SCvCJ,WAIxB,OACE,SAACU,EAAD,WAME,iCACE,SAACC,EAAD,CAAYI,GAAI,QAAhB,sBACA,SAACF,EAAD,CAAkBE,GAAI,WAAtB,8BAKP,GCtBYL,EAAkBX,EAAAA,GAAAA,IAAH,ggBAGX,SAAAE,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IACA,SAAAD,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IACA,SAAAD,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IAQD,SAAAD,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IACE,SAAAD,GAAC,OAAIA,EAAED,MAAME,QAAQ,EAApB,IACF,SAAAD,GAAC,OAAIA,EAAED,MAAMgB,OAAOC,MAAnB,I,UCVTC,EAAa,WACxB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/B,OACE,+BACE,UAAC,EAAD,6CAEGF,GAAa,SAACd,EAAD,KAAgB,SAACS,EAAD,QAIrC,E,SCdYQ,EAAYvB,EAAAA,GAAAA,IAAH,iPAOTC,EAAAA,EAAAA,GAAS,EAAG,GAEbA,EAAAA,EAAAA,QAAAA,GAEGA,EAAAA,EAAAA,UAAAA,EACJA,EAAAA,EAAAA,OAAAA,YAEWA,EAAAA,EAAAA,OAAAA,sBAGTuB,EAAqBxB,EAAAA,GAAAA,IAAH,4NAG0B,SAAAE,GAAC,OAAIA,EAAED,MAAMwB,OAAOC,WAAWC,cAA9B,I,+ECZ7CC,EAAU5B,EAAAA,GAAAA,IAAH,mnBAIE6B,EAAoBC,EAAsBC,EAA0BC,EAOpEC,EAAqBC,EAAuBC,EAA2BC,GAMhFC,EAAYrC,EAAAA,GAAAA,IAAH,mVCpBTsC,EAAe,WAC1B,IAAMlB,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE/B,OACE,8BACGF,GACC,UAACI,EAAD,YACE,SAACL,EAAD,KACA,SAAC,KAAD,QAGF,SAACI,EAAD,WACE,SAACc,EAAD,WACE,UAACT,EAAD,YACE,SAACT,EAAD,KACA,SAAC,KAAD,YAOb,C,sFC9BOmB,EAAiBC,EAAQ,MAAzBD,aAEKE,EAAe,WAC1B,OAAO,SAACF,EAAD,GACR,EAED,W","sources":["components/NavHeader/NavHeader.styled.js","components/NavHeader/NavHeader.jsx","components/AuthHeader/AuthHeader.styled.js","components/AuthHeader/AuthHeader.jsx","components/MainHeader/MainHeader.styled.js","components/MainHeader/MainHeader.jsx","pages/Styles/SharedLayout.styled.jsx","pages/Styles/Background.styled.js","components/SharedLayout/SharedLayout.jsx","pages/CommonLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/Common/Theme';\n\nexport const NavHeaderContainer = styled.div`\n  height: 40px;\n  text-align: end;\n\n  @media screen and (max-width: 767px) {\n    background: ${theme.colors.background.greyBackground};\n    padding-left: ${p => p.theme.spacing[3]}px;\n    padding-right: ${p => p.theme.spacing[3]}px;\n  }\n`;\nexport const Exit = styled.button`\n  padding-left: ${p => p.theme.spacing[3]}px;\n  height: 32px;\n  background: none;\n  border: none;\n  border-left: ${theme.border.header};\n`;\nexport const Name = styled.button`\n  padding-right: ${p => p.theme.spacing[3]}px;\n  height: 32px;\n  border: none;\n  background: none;\n`;\n","import { useAuth } from 'hooks/useAuth';\nimport { Exit, Name, NavHeaderContainer } from './NavHeader.styled';\n\nexport const NavHeader = () => {\n  const { name } = useAuth();\n  return (\n    <>\n      <NavHeaderContainer>\n        <Name type=\"button\">Hello {name}</Name>\n        <Exit>\n          <a href=\"./logout\">Exit</a>\n        </Exit>\n      </NavHeaderContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../Common/Theme';\n\nexport const HeaderContainer = styled.nav`\n  border-bottom: ${theme.border.header};\n  padding-bottom: ${theme.spacing[3]}px;\n  padding-top: ${theme.spacing[4]}px;\n  display: flex;\n  @media screen and (min-width: 321px) {\n    justify-content: flex-end;\n    border: none;\n  }\n  @media screen and (min-width: 769px) {\n  }\n`;\n\nexport const LinkSignIn = styled(NavLink)`\n  margin: ${theme.mp(0, 0, 3, 3)};\n  color: ${theme.colors.text.defaultText};\n  text-decoration: none;\n  margin-left: auto;\n  @media screen and (min-width: 321px) {\n    margin-left: auto;\n  }\n  @media screen and (min-width: 769px) {\n    margin-left: ${theme.spacing[3]}px;\n    padding-left: ${theme.spacing[3]}px;\n    border-left: ${theme.border.header};\n  }\n`;\n\nexport const LinkRegistration = styled(NavLink)`\n  margin: ${theme.mp(0, 0, 3, 3)};\n  color: ${theme.colors.text.mediumText};\n  text-decoration: none;\n  margin-right: ${theme.spacing[3]}px;\n  @media screen and (min-width: 321px) {\n    margin-right: ${theme.spacing[3]}px;\n  }\n`;\nexport const HamburgerMenu = styled.button`\n  border: none;\n  background-color: inherit;\n  line-height: 20px;\n  margin: ${theme.mp(0, 3, 0, 'auto')};\n`;\n","import { LinkSignIn, LinkRegistration, HeaderContainer } from './AuthHeader.styled';\n// import { LinkSignIn, LinkRegistration, HamburgerMenu, HeaderContainer } from './AuthHeader.styled';\n// import { GiHamburgerMenu } from 'react-icons/gi';\n// import { useSelector } from 'react-redux';\n// import { selectUserIsLoggedIn } from 'redux/selectors';\n\nexport const AuthHeader = () => {\n  // const isUserLoggedIn = useSelector(selectUserIsLoggedIn) || false;\n\n  // console.log({ isUserLoggedIn });\n  return (\n    <HeaderContainer>\n      {/* {isUserLoggedIn ? ( */}\n      {/* <HamburgerMenu type=\"button\"> */}\n      {/* <GiHamburgerMenu size={18} /> */}\n      {/* </HamburgerMenu> */}\n      {/* ) : ( */}\n      <>\n        <LinkSignIn to={'login'}>SIGN IN</LinkSignIn>\n        <LinkRegistration to={'register'}>REGISTRATION</LinkRegistration>\n      </>\n      {/* )} */}\n    </HeaderContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: ${p => p.theme.spacing[3]}px;\n  padding-left: ${p => p.theme.spacing[3]}px;\n  padding-right: ${p => p.theme.spacing[3]}px;\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: ${p => p.theme.spacing[5]}px;\n    padding-bottom: ${p => p.theme.spacing[3]}px;\n    border-bottom: ${p => p.theme.border.header};\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    border: none;\n    padding-bottom: 0;\n  }\n`;\n","import { useSelector } from 'react-redux';\n\nimport { NavHeader } from 'components/NavHeader/NavHeader';\nimport { AuthHeader } from 'components/AuthHeader/AuthHeader';\nimport { HeaderContainer } from './MainHeader.styled';\nimport { selectUserIsLoggedIn } from 'redux/selectors';\n\nexport const MainHeader = () => {\n  const isLoggedIn = useSelector(selectUserIsLoggedIn);\n  return (\n    <>\n      <HeaderContainer>\n        [LOGO] - - [Calculator] [Diary]\n        {isLoggedIn ? <NavHeader /> : <AuthHeader />}\n      </HeaderContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../components/Common/Theme';\n\nexport const HeaderBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  margin: 0;\n  padding: ${theme.mp(3, 4)};\n\n  height: ${theme.spacing[5]}px;\n\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.defaultText};\n\n  background-color: ${theme.colors.pageBackgroundAccent};\n`;\n\nexport const HeaderBarIsLogedIn = styled.div`\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    background: linear-gradient(to right, white 760px, ${p => p.theme.colors.background.greyBackground} 760px 1280px);\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import styled from 'styled-components';\n\nimport tabletbanana from '../../images/bcg-pages/tabletbanana.png';\nimport desktopbanana from '../../images/bcg-pages/desktopbanana.png';\nimport tabletstrawberry from '../../images/bcg-pages/tabletstrawberry.png';\nimport desktopstrawberry from '../../images/bcg-pages/desktopstrawberry.png';\nimport tabletleaf from '../../images/bcg-pages/tabletleaf.png';\nimport desktopleaf from '../../images/bcg-pages/desktopleaf.png';\nimport tabletgreyback from '../../images/bcg-pages/tabletgreyback.png';\nimport desktopgreyback from '../../images/bcg-pages/desktopgreyback.png';\n\nexport const Wrapper = styled.div`\n  background: none;\n  @media screen and (min-width: 768px) {\n    height: 100vh;\n    background: url(${tabletleaf}), url(${tabletbanana}), url(${tabletstrawberry}), url(${tabletgreyback}), white;\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: right 16px top -60px, right bottom, right top 361px, right bottom;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 100vh;\n    background: url(${desktopleaf}), url(${desktopbanana}), url(${desktopstrawberry}), url(${desktopgreyback}), white;\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: right 25% bottom 140px, right top, right bottom, right bottom;\n  }\n`;\n\nexport const Container = styled.div`\n  /* padding: 0 20px; */\n  width: 100%;\n  margin: auto;\n  @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    /* padding: 0 32px; */\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    /* padding: 0 16px; */\n  }\n`;\n","import { useSelector } from 'react-redux';\n\nimport { MainHeader } from 'components/MainHeader/MainHeader';\nimport { Outlet } from 'react-router-dom';\nimport { HeaderBar, HeaderBarIsLogedIn } from '../../pages/Styles/SharedLayout.styled';\nimport { selectUserIsLoggedIn } from 'redux/selectors';\nimport { Container, Wrapper } from 'pages/Styles/Background.styled';\n\nexport const SharedLayout = () => {\n  const isLoggedIn = useSelector(selectUserIsLoggedIn);\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <HeaderBarIsLogedIn>\n          <MainHeader />\n          <Outlet />\n        </HeaderBarIsLogedIn>\n      ) : (\n        <HeaderBar>\n          <Container>\n            <Wrapper>\n              <MainHeader />\n              <Outlet />\n            </Wrapper>\n          </Container>\n        </HeaderBar>\n      )}\n    </>\n  );\n};\n","const { SharedLayout } = require('components/SharedLayout/SharedLayout');\n\nexport const CommonLayout = () => {\n  return <SharedLayout />;\n};\n\nexport default CommonLayout;\n"],"names":["NavHeaderContainer","styled","theme","p","spacing","Exit","Name","NavHeader","name","useAuth","type","href","HeaderContainer","LinkSignIn","NavLink","LinkRegistration","AuthHeader","to","border","header","MainHeader","isLoggedIn","useSelector","selectUserIsLoggedIn","HeaderBar","HeaderBarIsLogedIn","colors","background","greyBackground","Wrapper","tabletleaf","tabletbanana","tabletstrawberry","tabletgreyback","desktopleaf","desktopbanana","desktopstrawberry","desktopgreyback","Container","SharedLayout","require","CommonLayout"],"sourceRoot":""}