{"version":3,"file":"static/js/574.4a500647.chunk.js","mappings":"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","sources":["components/Common/FormComponents.js","components/InputFormValid/InputEmail.js","components/InputFormValid/InputForm.styled.js","components/InputFormValid/InputPassword.js","components/Loader/LoaderSmall.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/InputFormValid/InputName.js","components/RegisterForm/RegisterForm.jsx","pages/RegistrationPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst BasicButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: ${p => p.theme.mp(1)};\n  padding: ${p => p.theme.mp(1, 3)};\n\n  font-size: ${p => p.theme.fontSizes.default};\n  height: 44px;\n  width: 182px;\n\n  outline: none;\n  border-radius: ${p => p.theme.radii.xlarge};\n\n  transition: box-shadow ${p => p.theme.animation.fast};\n\n  &:hover,\n  &:focus {\n    box-shadow: ${p => p.theme.button.shadow.hover};\n  }\n\n  &:active {\n    box-shadow: ${p => p.theme.button.shadow.active};\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  margin: ${p => p.theme.mp(2, 4)};\n  padding: ${p => p.theme.mp(2, 4)};\n\n  border: none;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: ${p => p.theme.mp(2, 0, 1)};\n\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const StyledInput = styled.input`\n  margin: ${p => p.theme.mp(0, 0, 0, 3)};\n  padding: ${p => p.theme.mp(1, 2)};\n\n  font-size: ${p => p.theme.fontSizes.default};\n  font-weight: ${p => p.theme.fontWeights.normal};\n\n  border: none;\n  border-bottom: 1px solid #000000;\n`;\n\nexport const StyledAccentButton = styled(BasicButton)`\n  color: ${p => p.theme.button.accentButton.text};\n  border: ${p => p.theme.button.accentButton.border};\n  background-color: ${p => p.theme.button.accentButton.background};\n  box-shadow: ${p => p.theme.button.shadow.default};\n`;\n\nexport const StyledDefaultButton = styled(BasicButton)`\n  color: ${p => p.theme.button.defaultButton.text};\n  border: ${p => p.theme.button.defaultButton.border};\n  background-color: ${p => p.theme.button.defaultButton.background};\n  box-shadow: none;\n`;\n","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputMail = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"email\"\n    type=\"email\"\n    name=\"email\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import styled from 'styled-components';\nimport { theme } from 'components/Common/Theme';\n\nexport const InputForm = styled.input`\n  width: 285px;\n  height: 36px;\n  border-bottom: ${theme.border.form};\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.text.defaultText};\n  border: none;\n  border-bottom: 1px solid #E0E0E0;\n   background-color: transparent;\n\n   @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n`;","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputPassword = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"current-password\"\n    type=\"password\"\n    name=\"password\"\n    required\n    onChange={onChange}\n    value={value}\n    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n    title=\"Має містити принаймні одну цифру, одну велику та малу літеру та принаймні 6 або більше символів\"\n  />\n);","import { ThreeDots } from 'react-loader-spinner';\nimport { theme } from 'components/Common/Theme';\n\nexport const LoaderSmall = ({ size = 30, visible = true, color = theme.colors.text.accentText }) => {\n  return (\n    <ThreeDots\n      height={size}\n      width={size}\n      radius=\"15\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      visible={visible}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'components/Common/Theme';\n\nexport const Registration = styled.div`\n  padding-top: 40px;\n  width: 280px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 160px;\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const FormRegistration = styled.form`\n  border: none;\n  margin-top: 55px;\n`;\n\nexport const StyledTitleForm = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-family: 'Verdana';\n  font-style: normal;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  font-size: ${theme.fontSizes.default};\n  font-weight: ${theme.fontWeights.bold};\n  color: ${theme.colors.text.accentText};\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledInputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow: hidden;\n`;\n\nexport const StyledLabelInput = styled.label`\n  padding-bottom: 20px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-size: ${theme.fontSizes.default};\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${theme.fontWeights.bold};\n  color: ${theme.colors.text.mediumText};\n`;\n\nexport const ButtonRegContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 60px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const ButtonReg = styled.div`\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonLog = styled.div`\n  @media screen and (min-width: 768px) {\n    margin-left: 20px;\n  }\n`;\n\nexport const AccentButton = styled.button`\n  height: 44px;\n  width: 182px;\n  color: ${p => p.theme.button.accentButton.text};\n  border: ${p => p.theme.button.accentButton.border};\n  background-color: ${p => p.theme.button.accentButton.background};\n  box-shadow: ${p => p.theme.button.shadow.default};\n  border-radius: 30px;\n`;\n\nexport const DefaultButton = styled.button`\n  height: 44px;\n  width: 182px;\n  color: ${p => p.theme.button.defaultButton.text};\n  border: ${p => p.theme.button.defaultButton.border};\n  background-color: ${p => p.theme.button.defaultButton.background};\n  box-shadow: none;\n  border-radius: 30px;\n`;\n\nexport const StyledError = styled.div`\n  color: #e11616;\n`;","import React from 'react';\nimport { InputForm } from './InputForm.styled';\n\nexport const InputName = ({ onChange, value }) => (\n  <InputForm\n    autoComplete=\"name\"\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Назва може містити лише літери, апостроф, тире та пробіли\"\n    required\n    onChange={onChange}\n    value={value}\n  />\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { constants } from 'constants';\nimport { registerUser } from 'redux/user/userOperations';\nimport { selectIsLoadingUser, selectErrorUser } from 'redux/user/userSelectors';\nimport { Link } from 'react-router-dom';\nimport {\n  Registration,\n  FormRegistration,\n  StyledInputGroup,\n  StyledTitleForm,\n  StyledLabelInput,\n  ButtonRegContainer,\n  ButtonReg,\n  ButtonLog,\n  StyledError,\n} from './RegisterForm.styled';\n\nimport { InputName } from 'components/InputFormValid/InputName';\nimport { InputMail } from 'components/InputFormValid/InputEmail';\nimport { InputPassword } from 'components/InputFormValid/InputPassword';\nimport { LoaderSmall } from 'components/Loader/LoaderSmall';\nimport { StyledAccentButton, StyledDefaultButton } from 'components/Common/FormComponents';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const initialUser = { name: '', email: '', password: '' };\n  const [user, setUser] = useState(initialUser);\n  const [isError, setIsError] = useState(false);\n  const isLoading = useSelector(selectIsLoadingUser);\n  const userError = useSelector(selectErrorUser);\n  const googleUrl = `${constants.apiServerAddress}/user/google`;\n\n  const handleChange = e => {\n    const newUserData = { ...user };\n    newUserData[e.currentTarget.name] = e.currentTarget.value;\n    setUser(newUserData);\n  };\n\n  const resetForm = () => {\n    setUser(initialUser);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsError(false);\n    await dispatch(registerUser({ name, email, password }));\n    \n    if (!isLoading && userError) {\n      setIsError(true);\n    } else {\n      resetForm();\n    };\n  };\n\n  const { name, email, password } = user;\n\n  return (\n    <Registration>\n      <StyledTitleForm>Register</StyledTitleForm>\n\n      <FormRegistration onSubmit={handleSubmit}>\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Name *\n            <InputName value={name} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            E-mail *\n            <InputMail value={email} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabelInput>\n            Password *\n            <InputPassword value={password} onChange={handleChange} />\n          </StyledLabelInput>\n        </StyledInputGroup>\n\n        {isError ? <StyledError>{userError}</StyledError> : null}\n        \n        <ButtonRegContainer>\n          <ButtonReg>\n            <StyledAccentButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? <LoaderSmall /> : 'Register'}\n            </StyledAccentButton>\n          </ButtonReg>\n\n          <ButtonLog>\n            <Link to={'/login'}>\n              <StyledDefaultButton type=\"button\">Login</StyledDefaultButton>\n            </Link>\n          </ButtonLog>\n        </ButtonRegContainer>\n\n        <ButtonReg style={{ margin: 0, marginTop: 20 }}>\n          <a href={googleUrl}>\n            <StyledDefaultButton type=\"button\">Google</StyledDefaultButton>\n          </a>\n        </ButtonReg>\n      </FormRegistration>\n    </Registration>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks/useAuth';\nimport { Navigate, useSearchParams } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const { isLoggedIn } = useAuth();\n  const [searchParams] = useSearchParams();\n  const retPath = searchParams.get('retPath') || '/';\n\n  return isLoggedIn ? <Navigate to={`/${retPath}`} /> : <RegisterForm />;\n};\n\nexport default LoginPage;\n"],"names":["BasicButton","styled","p","theme","mp","fontSizes","default","radii","xlarge","animation","fast","button","shadow","hover","active","StyledAccentButton","l","fontWeights","bold","normal","accentButton","text","border","background","StyledDefaultButton","defaultButton","InputMail","onChange","value","autoComplete","type","name","required","InputForm","InputPassword","pattern","title","LoaderSmall","size","visible","color","height","width","radius","ariaLabel","Registration","FormRegistration","StyledTitleForm","StyledInputGroup","StyledLabelInput","ButtonRegContainer","ButtonReg","ButtonLog","StyledError","InputName","RegisterForm","dispatch","useDispatch","initialUser","email","password","useState","user","setUser","isError","setIsError","isLoading","useSelector","selectIsLoadingUser","userError","selectErrorUser","googleUrl","constants","handleChange","e","newUserData","currentTarget","handleSubmit","preventDefault","registerUser","onSubmit","disabled","to","style","margin","marginTop","href","isLoggedIn","useAuth","useSearchParams","retPath","get"],"sourceRoot":""}